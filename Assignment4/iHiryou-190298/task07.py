# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fg8vq0aav_xolC0i9o0dxkemzejW1DQI

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
rdfs = Namespace("http://www.w3.org/2000/01/rdf-schema#")

# Visualize the results
# Using rdflib
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)) :
  print(s)
print("--------")
# Using SPARQL
query = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject RDFS:subClassOf ns:Person
  } 
  ''',
  initNs= {"RDFS": rdfs, "ns":ns})
for result in g.query(query):
  print(result.Subject)
#for r in g.query(q1):
#  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Using rdfslib
for s,p,o in g.triples((None, RDF.type, ns.Person)) :
  print(s)
# As we saw in task 7.1, Researcher is a subclass of Person
for s,p,o in g.triples((None, RDF.type, ns.Researcher)):
  print(s)
print("--------")
# Using SPARQL
query1= prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ns:Person
  } 
  ''',
  initNs = {"ns":ns})
query2 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ns:Researcher
  } 
  ''',
  initNs = {"ns":ns})

for result in g.query(query1) :
  print(result.Subject)
for result in g.query(query2) :
  print(result.Subject)
# Visualize the results

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Using rdfslib
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for s2,p2,o2 in g.triples((s,None,None)):
    print(s2,p2,o2)
# Researcher as a subclass of Person
for s,p,o in g.triples((None, RDF.type, ns.Researcher)):
  for s2,p2,o2 in g.triples((s,None,None)):
    print(s2,p2,o2)
print("--------")
# Using SPARQL
query1 = prepareQuery('''
  SELECT ?s ?p ?o WHERE { 
    ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ns:Person.
    ?s ?p ?o.
  } 
  ''',
  initNs = {"ns":ns})

query2 = prepareQuery('''
  SELECT ?s ?p ?o WHERE { 
    ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ns:Researcher.
    ?s ?p ?o.
  } 
  ''',
  initNs = {"ns":ns})
for result in g.query(query1):
  print(result.s, result.p, result.o)

for result in g.query(query2):
  print(result.s, result.p, result.o)
# Visualize the results